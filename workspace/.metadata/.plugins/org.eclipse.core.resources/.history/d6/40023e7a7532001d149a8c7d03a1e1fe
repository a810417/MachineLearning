import weka.attributeSelection.AttributeSelection;
import weka.attributeSelection.InfoGainAttributeEval;
import weka.attributeSelection.Ranker;
import weka.classifiers.trees.J48;
import weka.core.Instances;
import weka.core.Utils;
import weka.core.converters.ConverterUtils.DataSource;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Remove;

public class ClassificationTask {

	public static void main(String[] args) throws Exception {
		DataSource source = new DataSource("data/zoo.arff");
		Instances data = source.getDataSet();
		System.out.println(data.numInstances()+"instances loaded.");
		System.out.println(data.toString()); // 印出 dataset

		// remove animal attribute
		String[] opts = new String[] {"-R", "1"};
		Remove remove = new Remove();
		remove.setOptions(opts);
		remove.setInputFormat(data);
		data = Filter.useFilter(data, remove);
		
		// Feature selection		
		AttributeSelection attSelect = new AttributeSelection();
		InfoGainAttributeEval eval = new InfoGainAttributeEval(); // 建立評估器
		Ranker search = new Ranker(); // 建立排行器

		attSelect.setEvaluator(eval);
		attSelect.setSearch(search);
		attSelect.SelectAttributes(data);
		int[] indices = attSelect.selectedAttributes();
		System.out.println("Selected attributes: "+Utils.arrayToString(indices));
		
		// Build a decision tree
		String[] options = new String[1];
		options[0] = "-U"; // J48 unpruned tree
		J48 tree = new J48(); // 建立 J48 決策樹演算法物件
		tree.setOptions(options);
		tree.buildClassifier(data); // 執行
		System.out.println(tree); // 顯示結果
	}

}
